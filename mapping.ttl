@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ont: <http://example.com/ont#>.
@prefix ns: <http://example.com/>.

<#DevOpsActivitiesMap>
  rr:logicalTable <#ActivitiesTableView>;
#  rr:logicalTable [ rr:tableName "Activities" ] ;
  rr:subjectMap [
	rr:template "ns:activity/{activity}";
	rr:class ont:Activity;
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:label;
    rr:objectMap[ rr:column "activity"; ];
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:comment;
    rr:objectMap[ rr:column "description"; ];
  ];
  rr:predicateObjectMap [
    rr:predicate ont:cleansed;
    rr:objectMap[ rr:column "data_cleansed";
                  rr:datatype xsd:boolean ];
  ];
  rr:predicateObjectMap [
        rr:predicate ont:inPhase;
        rr:objectMap [ 
          rr:parentTriplesMap <#DevOpsPhasesMap>;
          rr:joinCondition [
            rr:child "phase";
            rr:parent "phase";
          ]
          ];
  ];
    rr:predicateObjectMap [
      rr:predicate ont:activityTool;
      rr:objectMap [ 
        rr:parentTriplesMap <#DevOpsActivityToolsMap>;
        rr:joinCondition [
          rr:child "activity";
          rr:parent "activity";
        ]
      ]
  ];
      rr:predicateObjectMap [
      rr:predicate ont:activityArtifact;
      rr:objectMap [ 
        rr:parentTriplesMap <#DevOpsActivityArtifactInputsMap>;
        rr:joinCondition [
          rr:child "activity";
          rr:parent "activity";
        ]
      ]
  ];
      rr:predicateObjectMap [
      rr:predicate ont:activityArtifact;
      rr:objectMap [ 
        rr:parentTriplesMap <#DevOpsActivityArtifactOutputsMap>;
        rr:joinCondition [
          rr:child "activity";
          rr:parent "activity";
        ]
      ]
  ].

<#DevOpsToolsMap>
  rr:logicalTable <#ToolsTableView>;
#  rr:logicalTable [ rr:tableName "Tools" ] ;
  rr:subjectMap [
	rr:template "ns:tool/{tool}";
	rr:class ont:Tool;
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:label;
    rr:objectMap[ rr:column "tool"; ];
  ];
  rr:predicateObjectMap [
    rr:predicate ont:features;
    rr:objectMap[ rr:column "features"; ];
  ];
  rr:predicateObjectMap [
    rr:predicate ont:benefits;
    rr:objectMap[ rr:column "benefits"; ];
  ];
  rr:predicateObjectMap [
    rr:predicate ont:cleansed;
    rr:objectMap[ rr:column "data_cleansed";
                  rr:datatype xsd:boolean ];
  ];
    rr:predicateObjectMap [
        rr:predicate ont:inPhase;
        rr:objectMap [ 
          rr:parentTriplesMap <#DevOpsToolPhasesMap>;
          rr:joinCondition [
            rr:child "tool";
            rr:parent "tool";
          ]
        ];
  ];
  rr:predicateObjectMap [
      rr:predicate ont:toolArtifact;
      rr:objectMap [ 
        rr:parentTriplesMap <#DevOpsToolArtifactInputsMap>;
        rr:joinCondition [
          rr:child "tool";
          rr:parent "tool";
        ]
      ]
  ];
  rr:predicateObjectMap [
      rr:predicate ont:toolArtifact;
      rr:objectMap [ 
        rr:parentTriplesMap <#DevOpsToolArtifactOutputsMap>;
        rr:joinCondition [
          rr:child "tool";
          rr:parent "tool";
        ]
      ]
  ];
    rr:predicateObjectMap [
      rr:predicate ont:toolActivity;
      rr:objectMap [ 
        rr:parentTriplesMap <#DevOpsActivityToolsMap>;
        rr:joinCondition [
          rr:child "tool";
          rr:parent "tool";
        ]
      ]
  ].

<#DevOpsToolPhasesMap>
  rr:logicalTable <#ToolPhasesTableView>;
#  rr:logicalTable [ rr:tableName "tool_phases" ] ;
  rr:subjectMap [
	rr:template "ns:phasetool/{phase}/{tool}";
	rr:class ont:LabelledCleansable;
  ];
  rr:predicateObjectMap[
    rr:predicate rdfs:description;
    rr:object "Phase employing a Tool"
  ];
  rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ rr:template "{tool}: as used during :{phase}"; 
                       rr:termType rr:Literal ];
  ];
  rr:predicateObjectMap [
    rr:predicate ont:cleansed;
    rr:objectMap[ rr:column "data_cleansed";
                  rr:datatype xsd:boolean ];
  ].

<#DevOpsActivityToolsMap>
  rr:logicalTable <#ActivityToolsTableView>;
#  rr:logicalTable [ rr:tableName "activity_tools" ] ;
  rr:subjectMap [
	rr:template "ns:activitytool/{activity}/{tool}";
	rr:class ont:LabelledCleansable;
  ];
  rr:predicateObjectMap[
    rr:predicate rdfs:description;
    rr:object "Tool employed in Activity"
  ];
  rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ rr:template "{tool}: as used for :{activity}"; 
                       rr:termType rr:Literal ];
  ];
  rr:predicateObjectMap [
    rr:predicate ont:cleansed;
    rr:objectMap[ rr:column "data_cleansed";
                  rr:datatype xsd:boolean ];
  ].

<#DevOpsActivityArtifactInputsMap>
  rr:logicalTable <#ActivityArtifactInputsTableView>;
  rr:subjectMap [
	rr:template "ns:activityinputartifact/{activity}/{artifact}";
	rr:class ont:LabelledCleansable;
  ];
  rr:predicateObjectMap[
    rr:predicate rdfs:description;
    rr:object "Artifact as input during Activity"
  ];
  rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ rr:template "{artifact}: as input during :{activity}"; 
                       rr:termType rr:Literal ];
  ];
  rr:predicateObjectMap [
    rr:predicate ont:cleansed;
    rr:objectMap[ rr:column "data_cleansed";
                  rr:datatype xsd:boolean ];
  ].


<#DevOpsActivityArtifactOutputsMap>
  rr:logicalTable <#ActivityArtifactOutputsTableView>;
  rr:subjectMap [
	rr:template "ns:activitoutputartifact/{activity}/{artifact}";
	rr:class ont:LabelledCleansable;
  ];
    rr:predicateObjectMap[
    rr:predicate rdfs:description;
    rr:object "Artifact as output during Activity"
  ];
  rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ rr:template "{artifact}: as output during :{activity}"; 
                       rr:termType rr:Literal ];
  ];
  rr:predicateObjectMap [
    rr:predicate ont:cleansed;
    rr:objectMap[ rr:column "data_cleansed";
                  rr:datatype xsd:boolean ];
  ].

<#DevOpsToolArtifactInputsMap>
  rr:logicalTable <#ToolArtifactInputsTableView>;
  rr:subjectMap [
	rr:template "ns:toolinputartifact/{tool}/{artifact}";
	rr:class ont:LabelledCleansable;
  ];
    rr:predicateObjectMap[
    rr:predicate rdfs:description;
    rr:object "Artifact as input to Tool"
  ];
  rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ rr:template "{artifact}: as input to tool :{tool}"; 
                       rr:termType rr:Literal ];
  ];
  rr:predicateObjectMap [
    rr:predicate ont:cleansed;
    rr:objectMap[ rr:column "data_cleansed";
                  rr:datatype xsd:boolean ];
  ].

<#DevOpsToolArtifactOutputsMap>
  rr:logicalTable <#ToolArtifactOutputsTableView>;
  rr:subjectMap [
	rr:template "ns:tooloutputartifact/{tool}/{artifact}";
	rr:class ont:LabelledCleansable;
  ];
  rr:predicateObjectMap[
    rr:predicate rdfs:description;
    rr:object "Artifact as output from Tool"
  ];
  rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ rr:template "{artifact}: as output from tool :{tool}"; 
                       rr:termType rr:Literal ];
  ];
  rr:predicateObjectMap [
    rr:predicate ont:cleansed;
    rr:objectMap[ rr:column "data_cleansed";
                  rr:datatype xsd:boolean ];
  ].


<#DevOpsPhasesMap>
  rr:logicalTable <#PhasesTableView>;
  #rr:logicalTable [ rr:tableName "phases" ];
  rr:subjectMap [
	rr:template "ns:phase/{phase}";
	rr:class ont:Phase
  ];
  rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ rr:column "phase"; ];
  ];
  rr:predicateObjectMap [
      rr:predicate ont:phaseTool;
      rr:objectMap [ 
        rr:parentTriplesMap <#DevOpsToolPhasesMap>;
        rr:joinCondition [
          rr:child "phase";
          rr:parent "phase";
        ]
      ];
  ].

<#DevOpsArtifacts>
  rr:logicalTable <#ArtifactsTableView>;
  #rr:logicalTable [ rr:tableName "phases" ];
  rr:subjectMap [
	rr:template "ns:artifact/{artifact}";
	rr:class ont:Artifact
  ];
  rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ rr:column "artifact"; ];
  ];
  rr:predicateObjectMap [
    rr:predicate ont:cleansed;
    rr:objectMap[ rr:column "data_cleansed";
                  rr:datatype xsd:boolean ];
  ];
  rr:predicateObjectMap [
      rr:predicate ont:artifactTool;
      rr:objectMap [ 
        rr:parentTriplesMap <#DevOpsToolArtifactInputsMap>;
        rr:joinCondition [
          rr:child "artifact";
          rr:parent "artifact";
        ]
      ]
  ];
  rr:predicateObjectMap [
      rr:predicate ont:artifactTool;
      rr:objectMap [ 
        rr:parentTriplesMap <#DevOpsToolArtifactOutputsMap>;
        rr:joinCondition [
          rr:child "artifact";
          rr:parent "artifact";
        ]
      ]
  ];
  rr:predicateObjectMap [
      rr:predicate ont:artifactActivity;
      rr:objectMap [ 
        rr:parentTriplesMap <#DevOpsActivityArtifactInputsMap>;
        rr:joinCondition [
          rr:child "artifact";
          rr:parent "artifact";
        ]
      ]
  ];
  rr:predicateObjectMap [
      rr:predicate ont:artifactActivity;
      rr:objectMap [ 
        rr:parentTriplesMap <#DevOpsActivityArtifactOutputsMap>;
        rr:joinCondition [
          rr:child "artifact";
          rr:parent "artifact";
        ]
      ]
  ].

<#DocProperties>
    rr:logicalTable [ rr:sqlQuery "select * from source_info" ];
    rr:subjectMap 
    [ rr:template "ns:versions";
      rr:class    ont:Version   ];
    rr:predicateObjectMap [
        rr:predicate <ns:info#r2rml_script_version>;
        rr:object "20230607-1"; 
    ];    
    rr:predicateObjectMap [
        rr:predicate <ns:info#xlsx_version>;
        rr:objectMap [ rr:column "xlsx_version"; ];
    ];
    rr:predicateObjectMap [
        rr:predicate <ns:info#excel2db_version>;
        rr:objectMap [ rr:column "excel2db_version"; ];
    ];
    rr:predicateObjectMap [
        rr:predicate <ns:info#normalisation_version>;
        rr:objectMap [ rr:column "normalisation_version"; ];
    ].


<#ActivitiesTableView> rr:sqlQuery "SELECT * FROM activities". # limit 2;" .
<#ActivityToolsTableView> rr:sqlQuery "SELECT * FROM activity_tools". # limit 2;" .
<#PhasesTableView> rr:sqlQuery "SELECT * FROM phases". # limit 2;" .
<#ToolsTableView> rr:sqlQuery "SELECT * FROM tools". # limit 2;" .
<#ToolPhasesTableView> rr:sqlQuery "SELECT * FROM tool_phases". # limit 2;" .
<#ArtifactsTableView> rr:sqlQuery "SELECT * FROM artifacts". # limit 2;" .
<#ToolArtifactInputsTableView> rr:sqlQuery "SELECT * FROM tool_artifacts where input = 1". # limit 2;" .
<#ToolArtifactOutputsTableView> rr:sqlQuery "SELECT * FROM tool_artifacts where output = 1". # limit 2;" .
<#ActivityArtifactInputsTableView> rr:sqlQuery "SELECT * FROM activity_artifacts where input = 1". # limit 2;" .
<#ActivityArtifactOutputsTableView> rr:sqlQuery "SELECT * FROM activity_artifacts where output = 1". # limit 2;" .


